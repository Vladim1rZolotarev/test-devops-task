user nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # JSON формат логов для Loki
    log_format json_logs escape=json
    '{'
        '"time":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_status":"$upstream_status",'
        '"request_time":"$request_time",'
        '"ssl_protocol":"$ssl_protocol",'
        '"ssl_cipher":"$ssl_cipher"'
    '}';

    access_log  /var/log/nginx/access.log json_logs;
    error_log   /var/log/nginx/error.log warn;

    # Основные настройки производительности
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    keepalive_requests 100;
    
    # Настройки буферов
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 20G;
    large_client_header_buffers 2 1k;
    
    # Настройки таймаутов
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Настройки кэширования
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Настройки сжатия
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript application/json;
    gzip_disable "MSIE [1-6]\.";

    # SSL настройки
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Настройка кэша для статических файлов
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static_cache:10m max_size=1g 
                    inactive=60m use_temp_path=off;

    upstream flask_backend {
        server flask-app:5000 max_fails=3 fail_timeout=30s;
        server flask-app:5000 backup;
        keepalive 32;
    }

    # HTTP → HTTPS редирект
    server {
        listen 80;
        server_name zolotarev.tech www.zolotarev.tech;
        return 301 https://$host$request_uri;
    }

    # HTTP → HTTPS редирект для Nextcloud
    server {
        listen 80;
        server_name cloud.zolotarev.tech;
        return 301 https://$host$request_uri;
    }

    # Основной HTTPS сервер
    server {
        listen 443 ssl;
        server_name zolotarev.tech www.zolotarev.tech;

        # Пути к сертификатам Let's Encrypt
        ssl_certificate /etc/letsencrypt/live/zolotarev.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/zolotarev.tech/privkey.pem;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location / {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_connect_timeout 2s;
            proxy_read_timeout 30s;
            proxy_send_timeout 10s;
            
            # Настройки кэширования
            proxy_cache static_cache;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            add_header X-Cache-Status $upstream_cache_status;
            
            # Настройки буферизации
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 8 32k;
            proxy_busy_buffers_size 64k;
        }

        # Кэширование статических файлов
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            proxy_pass http://flask_backend;
            proxy_cache static_cache;
            proxy_cache_valid 200 302 60m;
            proxy_cache_valid 404 1m;
            expires 1d;
            add_header Cache-Control "public";
            add_header X-Cache-Status $upstream_cache_status;
        }

        location /basic_status {
            stub_status on;
            allow all;
        }

        location = /health {
            access_log off;
            proxy_pass http://flask_backend;
            add_header Content-Type application/json;
        }
    }
    # Сервер для Grafana
    server {
        listen 443 ssl;
        server_name metrics.zolotarev.tech;

        # Пути к сертификатам Let's Encrypt
        ssl_certificate /etc/letsencrypt/live/zolotarev.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/zolotarev.tech/privkey.pem;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location / {
            proxy_pass http://test-devops-task-grafana-1:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            proxy_connect_timeout 5s;
            proxy_read_timeout 60s;
            proxy_send_timeout 30s;
        }
    }
    # Сервер для Nextcloud
    upstream php-handler {
        server nextcloud:9000;
    }

    server {
        listen 443 ssl http2;
        server_name cloud.zolotarev.tech;

        # SSL-сертификаты Let's Encrypt
        ssl_certificate /etc/letsencrypt/live/zolotarev.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/zolotarev.tech/privkey.pem;

        # Настройки SSL
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Заголовки безопасности
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;
        add_header X-Download-Options noopen;
        add_header X-Permitted-Cross-Domain-Policies none;
        add_header Referrer-Policy "no-referrer";

        # Корневая директория Nextcloud
        root /var/www/html;
        index index.php index.html;

        # Максимальный размер загружаемого файла
        client_max_body_size 20G;
        fastcgi_buffers 64 4K;

        # Отключение gzip для сохранения ETag
        gzip off;

        # Обработка ошибок
        error_page 403 /core/templates/403.php;
        error_page 404 /core/templates/404.php;

        location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
        }

        # Перенаправление для CardDAV/CalDAV
        location = /.well-known/carddav {
            return 301 https://$host/remote.php/dav;
        }
        location = /.well-known/caldav {
            return 301 https://$host/remote.php/dav;
        }

        location / {
            try_files $uri $uri/ =404;
            
            location ~ \.php$ {
                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;
                fastcgi_param HTTPS on;
                fastcgi_param modHeadersAvailable true;
                fastcgi_param front_controller_active true;
                fastcgi_pass php-handler;
                fastcgi_intercept_errors on;
                fastcgi_request_buffering off;
                
                fastcgi_read_timeout 120;
                fastcgi_connect_timeout 5;
                fastcgi_send_timeout 120;
            }
        }
        
        # Обработка корневого запроса
        location = / {
            try_files /index.php =404;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root/index.php;
            fastcgi_param HTTPS on;
            fastcgi_param modHeadersAvailable true;
            fastcgi_param front_controller_active true;
            fastcgi_pass php-handler;
            fastcgi_intercept_errors on;
            fastcgi_request_buffering off;
            
            fastcgi_read_timeout 120;
            fastcgi_connect_timeout 5;
            fastcgi_send_timeout 120;
        }

        # Запрет доступа к служебным директориям
        location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
        }
        location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) {
            deny all;
        }

        # Обработка PHP файлов
        location ~ \.php(?:$|/) {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            
            # Проверка существования файла
            try_files $fastcgi_script_name =404;
            
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
            fastcgi_param HTTPS on;
            fastcgi_param modHeadersAvailable true;
            fastcgi_param front_controller_active true;
            fastcgi_pass php-handler;
            fastcgi_intercept_errors on;
            fastcgi_request_buffering off;
            
            # Таймауты для PHP
            fastcgi_read_timeout 120;
            fastcgi_connect_timeout 5;
            fastcgi_send_timeout 120;
        }

        location ~ ^/(?:updater|ocs-provider)(?:$|/) {
            try_files $uri/ =404;
            index index.php;
        }

        # Кэширование статических ресурсов
        location ~* \.(?:css|js)$ {
            try_files $uri /index.php$uri$is_args$args;
            add_header Cache-Control "public, max-age=7200";
            access_log off;
        }

        location ~* \.(?:svg|gif|png|html|ttf|woff|woff2|ico|jpg|jpeg|webp)$ {
            try_files $uri /index.php$uri$is_args$args;
            access_log off;
        }

}
  
}
