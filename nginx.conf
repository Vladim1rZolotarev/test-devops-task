user nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    multi_accept on;
    use epoll;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # JSON формат логов для Loki
    log_format json_logs escape=json
    '{'
        '"time":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_status":"$upstream_status",'
        '"request_time":"$request_time",'
        '"ssl_protocol":"$ssl_protocol",'
        '"ssl_cipher":"$ssl_cipher"'
    '}';

    access_log  /var/log/nginx/access.log json_logs;
    error_log   /var/log/nginx/error.log warn;

    # Основные настройки производительности
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    keepalive_requests 100;
    
    # Настройки буферов
    client_body_buffer_size 10K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;
    
    # Настройки таймаутов
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Настройки кэширования
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Настройки сжатия
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript application/json;
    gzip_disable "MSIE [1-6]\.";

    # SSL настройки
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Настройка кэша для статических файлов
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=static_cache:10m max_size=1g 
                    inactive=60m use_temp_path=off;

    upstream flask_backend {
        server flask-app:5000 max_fails=3 fail_timeout=30s;
        server flask-app:5000 backup;
        keepalive 32;
    }

    # HTTP → HTTPS редирект
    server {
        listen 80;
        server_name zolotarev.tech www.zolotarev.tech;
        return 301 https://$host$request_uri;
    }

    # Основной HTTPS сервер
    server {
        listen 443 ssl;
        server_name zolotarev.tech www.zolotarev.tech;

        # Пути к сертификатам Let's Encrypt
        ssl_certificate /etc/letsencrypt/live/zolotarev.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/zolotarev.tech/privkey.pem;

        # HSTS (опционально)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location / {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_connect_timeout 2s;
            proxy_read_timeout 30s;
            proxy_send_timeout 10s;
            
            # Настройки кэширования
            proxy_cache static_cache;
            proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            add_header X-Cache-Status $upstream_cache_status;
            
            # Настройки буферизации
            proxy_buffering on;
            proxy_buffer_size 8k;
            proxy_buffers 8 32k;
            proxy_busy_buffers_size 64k;
        }

        # Кэширование статических файлов
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            proxy_pass http://flask_backend;
            proxy_cache static_cache;
            proxy_cache_valid 200 302 60m;
            proxy_cache_valid 404 1m;
            expires 1d;
            add_header Cache-Control "public";
            add_header X-Cache-Status $upstream_cache_status;
        }

        location /basic_status {
            stub_status on;
            allow all;
        }

        location = /health {
            access_log off;
            proxy_pass http://flask_backend;
            add_header Content-Type application/json;
        }
    }
}
