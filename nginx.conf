user nginx;
worker_processes auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # JSON формат логов для Loki
    log_format json_logs escape=json
    '{'
        '"time":"$time_iso8601",'
        '"remote_addr":"$remote_addr",'
        '"request":"$request",'
        '"status": "$status",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"http_referer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_status":"$upstream_status",'
        '"request_time":"$request_time",'
        '"ssl_protocol":"$ssl_protocol",'
        '"ssl_cipher":"$ssl_cipher"'
    '}';

    access_log  /var/log/nginx/access.log json_logs;
    error_log   /var/log/nginx/error.log warn;

    sendfile        on;
    keepalive_timeout  65;

    # SSL настройки
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    upstream flask_backend {
        server flask-app:5000;
    }

    # HTTP → HTTPS редирект
    server {
        listen 80;
        server_name zolotarev.tech www.zolotarev.tech;
        return 301 https://$host$request_uri;
    }

    # Основной HTTPS сервер
    server {
        listen 443 ssl;
        server_name zolotarev.tech www.zolotarev.tech;

        # Пути к сертификатам Let's Encrypt
        ssl_certificate /etc/letsencrypt/live/zolotarev.tech/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/zolotarev.tech/privkey.pem;

        # HSTS (опционально)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        location / {
            proxy_pass http://flask_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_connect_timeout 2s;
            proxy_read_timeout 30s;
        }

        location /basic_status {
            stub_status on;
            allow all;
        }

        location = /health {
            access_log off;
            proxy_pass http://flask_backend;
        }
    }
}
