services:
  loki:
    image: grafana/loki:latest
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yml
      - loki_data:/loki
    ports:
      - "3100:3100"
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:3100/ready | grep ready"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - my_network
    depends_on:
      loki:
        condition: service_healthy
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SERVER_ROOT_URL=https://zolotarev.tech/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SERVER_DOMAIN=zolotarev.tech
      - GF_SECURITY_COOKIE_SECURE=true
      - GF_SERVER_ENABLE_GZIP=true
      - GF_INSTALL_PLUGINS=grafana-loki
    volumes:
      - grafana_data:/var/lib/grafana
      - grafana_config:/etc/grafana
    networks:
      - my_network
    depends_on:
      loki:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:3000/api/health | grep ok"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  flask-app:
    image: vladim1rzolotarev/flask-app:latest
    build:
      context: .
    expose:
      - "5000"
    environment:
      - FLASK_ENV=production
    networks:
      - my_network
    deploy:
      replicas: 1
    depends_on:
      loki:
        condition: service_healthy
    restart: unless-stopped

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - my_network
    depends_on:
      grafana:
        condition: service_healthy
      flask-app:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: unless-stopped

networks:
  my_network:
    driver: bridge
    attachable: true
    ipam:
      config:
        - subnet: 172.18.0.0/16

volumes:
  grafana_data:
  grafana_config:
  loki_data: