version: '3.8'

services:
  flask-app:
    image: vladim1rzolotarev/flask-app:${TAG:-latest}
    build:
      context: .
      # Ускоряем сборку за счет кэширования
      cache_from:
        - vladim1rzolotarev/flask-app:${TAG:-latest}
    environment:
      FLASK_ENV: production
      # Оптимизация для graceful shutdown
      FLASK_SERVER_SHUTDOWN_TIMEOUT: 10
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 5s
    stop_grace_period: 10s
    stop_signal: SIGTERM
    networks:
      - my_network
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
        loki-external-labels: "job=flask-app,container_name={{.Name}}"

  nginx:
    image: nginx:alpine  # Используем более легкий образ
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      flask-app:
        condition: service_healthy
    stop_grace_period: 5s
    networks:
      - my_network
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
        loki-external-labels: "job=nginx,container_name={{.Name}}"
        loki-pipeline-stages: |
          - json:
              expressions:
                remote_addr:
                request:
                status:
          - labels:
              status:
          - static_labels:
              app: nginx

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    stop_grace_period: 5s
    networks:
      - my_network
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
        loki-external-labels: "job=prometheus"

  grafana:
    image: grafana/grafana-oss:latest  # Официальный образ с открытым исходным кодом
    ports:
      - "3000:3000"
    depends_on:
      prometheus:
        condition: service_started
      loki:
        condition: service_started
    stop_grace_period: 5s
    networks:
      - my_network
    volumes:
      - grafana_data:/var/lib/grafana
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
        loki-external-labels: "job=grafana"

  loki:
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yml
    volumes:
      - ./loki-config.yml:/etc/loki/local-config.yml
      - loki_data:/loki
    ports:
      - "3100:3100"
    stop_grace_period: 5s
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
    attachable: true

volumes:
  grafana_data:
    driver: local
  loki_data:
    driver: local